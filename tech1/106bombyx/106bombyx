#!/usr/bin/env python3
##
## EPITECH PROJECT, 2020
## 106bombyx
## File description:
## 106bombyx
##

from sys import argv, exit

def error_handling(n):
    print("USAGE")
    print("    ./106bombyx n [k | i0 i1]\n")
    print("DESCRIPTION")
    print("    n       number of first generation individuals")
    print("    k       growth rate from 1 to 4")
    print("    i0      initial generation (included)")
    print("    i1      final generation (included)")
    exit(n)

def fill_data_growth(n, k):
    j = 1

    while (j != 101):
        print (j, end=" ")
        print("%.2f" % n)
        n = k * n * (1000 - n) / 1000
        j += 1
    return 0

def fill_data_gen(n, i0, i1):
    k = 100

    while (k != 401):
        i = 1
        while (i != i1):
            n = k / 100 * n * (1000 - n) / 1000
            i += 1
        i = i0
        while (i != i1 + 1):
            print("%.2f" % (k / 100), end=" ")
            print("%.2f" % n)
            n = k / 100 * n * (1000 - n) / 1000
            i += 1
        k += 1
    return 0

def main():
    err = 0

    if len(argv) < 3 or len(argv) > 4:
        error_handling(84)
    try:
        if len(argv) == 3:
            n = float(argv[1])
            k = float(argv[2])
            if (k < 1 or k > 4):
                err = 1
                error_handling(84)
        else:
            n = float(argv[1])
            i0 = float(argv[2])
            i1 = float(argv[3])
            if (i1 < 1.0 or i0 < 1.0 or i0 > i1):
                err = 1
                error_handling(84)
        if n < 0.0:
            n = 0.0
    except:
        if err == 0:
            error_handling(84)
        else:
            exit(84)
    if len(argv) == 3:
        fill_data_growth(n, k)
    else:
        fill_data_gen(n, i0, i1)
    return 0

if __name__ == "__main__":
    main()
